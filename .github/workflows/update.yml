on: [workflow_dispatch, push]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - run: npm i node-fetch showdown
      - uses: actions/github-script@v4
        id: step
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const fetch = require("node-fetch");
            const showdown = require("showdown");
            let r = await fetch("/res.txt").then((res) => res.json());
            console.log(r);
            r = r
              .map((i) => {
                if (i.type === "PushEvent") {
                  return `- [\`${i.payload.commits[0].sha}\`](https://github.com/${i.repo.name}/commit/${i.payload.commits[0].sha})â€“ ${i.payload.commits[0].message} ([${i.repo.name}](https://github.com/${i.repo.name}))`;
                }
                if (i.type === "IssueCommentEvent" && i.payload.action === "created") {
                  return `- Commented in [${i.repo.name}](${
                    i.payload.comment.html_url
                  })<blockquote>${i.payload.comment.body.clip()}</blockquote>`;
                }
                if (i.type === "PullRequestEvent") {
                  console.log(
                    i.payload.pull_request.merged_by.login,
                    i.payload.pull_request.merged_at,
                    i.created_at,
                  );
                  console.log(
                    i.payload.pull_request.merged_by.login === "Explosion-Scratch" &&
                      i.payload.pull_request.merged_at.slice(0, 16) ===
                        i.created_at.slice(0, 16),
                  );
                  return `- ${
                    i.payload.pull_request.merged_by.login === "Explosion-Scratch" &&
                    i.payload.pull_request.merged_at.slice(0, 16) ===
                      i.created_at.slice(0, 16)
                      ? "Merged"
                      : i.payload.action
                  } a [pull request](${i.payload.pull_request.html_url}) in [${
                    i.repo.name
                  }](https://github.com/${i.repo.name})`;
                }
              })
              .join("\n");
            var converter = new showdown.Converter();
            return converter.makeHtml(r);
          result-encoding: string
      - name: Get result
        run: echo "${{steps.step.outputs.result}}"
